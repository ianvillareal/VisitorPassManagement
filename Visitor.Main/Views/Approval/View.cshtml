
@using Visitor.Main.Helpers;
@using Visitor.Main.ViewModels;
@using Visitor.Core;
@model VisitorRequestViewModel

@{
    ViewBag.Title = "Visitor Approval Details";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Visitor Approval Details
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#">Clip Admin Approval</a></li>
            <li class="active">Visitor Approval Details</li>
        </ol>
    </section>
    <section class="content">
        <div class="form-group row">
            <div class="col-md-12">
                <div class="box box-success">
                    <div class="box-header with-border rilv-header-color">
                        <h3 class="box-title">Visitor Details</h3>
                    </div>
                    @using (Html.BeginForm("ApproveOrDecline", "Approval", FormMethod.Post, new { @class = "adminApproval-form with-validation" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true)
                        <!-- Start of Visitor Form -->
                        <div>
                            @Html.HiddenFor(model => model.RequestId, new { htmlAttributes = new { @id = "selectedvisitorId-field" } })
                            @Html.HiddenFor(model => model.Requestor)
                            @Html.HiddenFor(model => model.RequestorId)
                            @Html.HiddenFor(model => model.Requested)
                            @Html.HiddenFor(model => model.Purpose)
                            @Html.HiddenFor(model => model.Status)
                            @Html.HiddenFor(model => model.Arrival)
                            @Html.HiddenFor(model => model.Leave)
                            @Html.HiddenFor(model => model.Company)
                        </div>
                        <div class="box-body">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Company, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-static-text">
                                    <span>@Model.Company</span>
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Requestor, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-static-text">
                                    <span>@Html.DisplayTextFor(model => model.Requestor)</span>
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Requested, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-static-text">
                                    <span>@Model.Requested.ToString("MMM-dd-yyyy HH:mm:ss")</span>
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Purpose, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-static-text">
                                    <span>@Model.Purpose.DisplayName().ToString()</span>
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Category, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-static-text">
                                    <span>@Model.Category.DisplayName().ToString()</span>
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Status, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-static-text">
                                    <span>@Model.Status.DisplayName().ToString()</span>
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.VisitDate, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-static-text">
                                    <span>@Model.VisitDate.ToString("MMM-dd-yyyy")</span>
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Arrival, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-static-text">
                                    @if (@Model.Arrival != null)
                                    {
                                        <span>@Model.Arrival.Value.ToString("MMM-dd-yyyy HH:mm:ss")</span>
                                    }
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Leave, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-static-text">
                                    @if (@Model.Leave != null)
                                    {
                                        <span>@Model.Leave.Value.ToString("MMM-dd-yyyy HH:mm:ss")</span>
                                    }
                                </div>
                            </div>
                            <!-- Visitors -->
                            <div class="form-group row reduce-top-margin">
                                @Html.LabelFor(model => model.Visitors, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                <div class="col-md-8 col-lg-9 rilv-input-field">
                                    <div class="box box-solid box-table-default">
                                        <div class="box-header with-border rilv-panel-color">
                                            <h3 class="box-title">Visitors</h3>
                                            <div class="box-tools pull-right">
                                                <!-- Collapse Button -->
                                                <button id="visitor-creation-btn" type="button" class="btn btn-box-tool">
                                                    <i class="fa fa-plus-square" style="color:#000000"></i>
                                                </button>
                                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                                    <i class="fa fa-minus" style="color:#000000"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="box-body">
                                            <div class="form-group">
                                                <div id="visitor-creationList" class="panel-group" role="tablist" aria-multiselectable="true">
                                                    @{int index = 0; }
                                                    @foreach (var visitor in @Model.Visitors)
                                                    {
                                                        index++;
                                                        visitor.Index = index;
                                                        @Html.Partial("_VisitorInlineDetails", visitor)
                                                    }
                                                </div>
                                                <div id="visitor-creation-modal" class="modal fade alert" role="dialog" data-backdrop="static" data-creationurl=@Url.Action("AddVisitor") data-posturl=@Url.Action("UpdateVisitor")>
                                                    <div id="visitor-modal-container" class="modal-dialog">
                                                        <!-- Modal here -->
                                                        @Html.Partial("_VisitorDetails", new VisitorViewModel { ForAddition = true })
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Constructions -->
                            @if (Model.Purpose == Visitor.Core.PurposeType.Construction)
                            {
                                <!-- Requirement -->
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Requirement, new { @class = "control-label col-md-3 col-lg-2 rilv-input-label" })
                                    <div class="col-md-8 col-lg-9 rilv-input-field">
                                        <div class="box box-solid box-table-default">
                                            <div class="box-header with-border rilv-panel-color">
                                                <h3 class="box-title">Requirement</h3>
                                                <div class="box-tools pull-right">
                                                    <!-- Collapse Button -->
                                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                                        <i class="fa fa-minus"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="box-body">
                                                <div class="form-group row">
                                                    @Html.LabelFor(model => model.Requirement.Plan, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                                    <div class="col-md-8 col-lg-9 rilv-static-text">
                                                        <span>@Html.DisplayTextFor(model => model.Requirement.Plan)</span>
                                                    </div>
                                                </div>
                                                <div class="form-group row">
                                                    @Html.LabelFor(model => model.Requirement.Contractor, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                                    <div class="col-md-8 col-lg-9 rilv-static-text">
                                                        <span>@Html.DisplayTextFor(model => model.Requirement.Contractor)</span>
                                                    </div>
                                                </div>
                                                <div class="form-group row">
                                                    @Html.LabelFor(model => model.Requirement.CashBond, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                                    <div class="col-md-8 col-lg-9 rilv-static-text">
                                                        <span>@Html.DisplayTextFor(model => model.Requirement.CashBond)</span>
                                                    </div>
                                                </div>
                                                <div class="form-group row">
                                                    @Html.LabelFor(model => model.Requirement.WorkerOrientation, new { @class = "control-form-label col-md-3 col-lg-2 rilv-input-label" })
                                                    <div class="col-md-8 col-lg-9 rilv-static-text">
                                                        <span>@Html.DisplayTextFor(model => model.Requirement.WorkerOrientation)</span>
                                                    </div>
                                                </div>
                                                <div class="form-group row">
                                                    <table id="visitor-worker-table" class="table table-striped table-bordered hover stripe row-border multi-header-table Workers" cellspacing="0">
                                                        <thead>
                                                            <tr class="rilv-table-color">
                                                                <th>Worker</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody class="worker-body">
                                                            @foreach (var worker in Model.Requirement.WorkerList)
                                                            {
                                                                <tr>
                                                                    <td>
                                                                        @worker
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <!-- /.box-body -->
                        <div class="box-footer">
                            <div class="box-group pull-right">
                                @if (Model.Status == StatusType.ForApproval || Model.Status == StatusType.Pending)
                                {
                                    <input id="visitorApproval-approve-btn" type="submit" value="Approve" class="btn btn-primary" />
                                    if (Model.Purpose == PurposeType.Construction)
                                    {
                                        <a href=@Url.Action("CreateSeminar", "Visitor", SetSeminar()) class="btn btn-info">For Seminar</a>
                                    }
                                    <input id="visitorApproval-decline-btn" type="submit" value="Decline" class="btn btn-danger" />
                                }
                                <input id="visitor-back-button" type="button" value="Back" class="btn btn-warning html-backbutton-action" title="Back to previous page" />

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
    <div class="clearfix"></div>
</div>
@functions
{
    VisitorRequestViewModel SetSeminar()
    {
        var newModel = new VisitorRequestViewModel();

        newModel.RequestorId = Model.RequestorId;
        newModel.Requestor = Model.Requestor;
        newModel.Company = Model.Company;
        newModel.Requested = Model.Requested;
        newModel.Arrival = Model.Arrival;
        newModel.Leave = Model.Leave;
        newModel.Purpose = PurposeType.Visit;
        newModel.Category = CategoryType.Seminar;
        newModel.Status = Model.Status;
        newModel.EncodeVisitors = Json.Encode(Model.Visitors);
        //newModel.Visitors = Model.Visitors.ToList();

        return newModel;
    }
}
@Scripts.Render("~/bundles/visitor-js")
<!-- /.content-wrapper -->